Terminals unused in grammar

   SCANF
   ELIF
   CLASS
   INCLUDE
   FUNCTION
   TRY
   CATCH
   SUCCESS
   ARRAY
   AND
   OR
   NOT


State 3 conflicts: 17 shift/reduce
State 22 conflicts: 18 shift/reduce
State 54 conflicts: 17 shift/reduce
State 64 conflicts: 1 shift/reduce
State 83 conflicts: 18 shift/reduce
State 117 conflicts: 17 shift/reduce
State 118 conflicts: 17 shift/reduce
State 126 conflicts: 17 shift/reduce
State 130 conflicts: 18 shift/reduce
State 131 conflicts: 18 shift/reduce
State 140 conflicts: 18 shift/reduce
State 149 conflicts: 17 shift/reduce
State 151 conflicts: 17 shift/reduce
State 153 conflicts: 18 shift/reduce
State 154 conflicts: 17 shift/reduce
State 155 conflicts: 17 shift/reduce
State 158 conflicts: 18 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MAIN '{' statements '}'

    2 statements: statement
    3           | statements statement

    4 statement: declaration ';'
    5          | struct_declaration
    6          | enum_declaration
    7          | function_declaration
    8          | switch_statement
    9          | do_while_statement
   10          | assignment ';'
   11          | print_statement ';'
   12          | if_statement
   13          | while_statement
   14          | for_statement
   15          | return_statement ';'
   16          | BREAK ';'
   17          | CONTINUE ';'
   18          | /* empty */

   19 declaration: type IDENTIFIER

   20 type: INT
   21     | FLOAT
   22     | CHAR
   23     | STRING
   24     | VOID

   25 struct_declaration: STRUCT IDENTIFIER '{' struct_members '}' ';'

   26 struct_members: declaration ';'
   27               | struct_members declaration ';'

   28 enum_declaration: ENUM IDENTIFIER '{' enum_list '}' ';'

   29 enum_list: IDENTIFIER
   30          | enum_list ',' IDENTIFIER

   31 function_declaration: type IDENTIFIER '(' ')' '{' statements '}'

   32 switch_statement: SWITCH '(' IDENTIFIER ')' '{' case_list '}'

   33 case_list: case_statement
   34          | case_list case_statement

   35 case_statement: CASE INTEGER ':' statements BREAK ';'

   36 do_while_statement: DO '{' statements '}' WHILE '(' condition ')' ';'

   37 assignment: IDENTIFIER ASSIGN expression
   38           | IDENTIFIER '=' expression

   39 expression: INTEGER
   40           | FLOAT_VAL
   41           | IDENTIFIER
   42           | STRING_LITERAL
   43           | expression '+' expression
   44           | expression '-' expression
   45           | expression '*' expression
   46           | expression '/' expression
   47           | '(' expression ')'

   48 print_statement: PRINT '(' STRING_LITERAL ')'
   49                | PRINT '(' expression ')'

   50 if_statement: IF '(' condition ')' '{' statements '}'
   51             | IF '(' condition ')' '{' statements '}' ELSE '{' statements '}'

   52 while_statement: WHILE '(' condition ')' '{' statements '}'

   53 for_statement: FOR '(' for_init condition ';' for_update ')' '{' statements '}'

   54 for_init: declaration '=' expression ';'
   55         | assignment ';'

   56 for_update: assignment

   57 condition: expression comparison_op expression
   58          | IDENTIFIER
   59          | INTEGER

   60 comparison_op: '>'
   61              | '<'
   62              | '=' '='
   63              | '!' '='
   64              | '>' '='
   65              | '<' '='

   66 return_statement: RETURN
   67                 | RETURN expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 63
'(' (40) 31 32 36 47 48 49 50 51 52 53
')' (41) 31 32 36 47 48 49 50 51 52 53
'*' (42) 45
'+' (43) 43
',' (44) 30
'-' (45) 44
'/' (47) 46
':' (58) 35
';' (59) 4 10 11 15 16 17 25 26 27 28 35 36 53 54 55
'<' (60) 61 65
'=' (61) 38 54 62 63 64 65
'>' (62) 60 64
'{' (123) 1 25 28 31 32 36 50 51 52 53
'}' (125) 1 25 28 31 32 36 50 51 52 53
error (256)
IDENTIFIER (258) 19 25 28 29 30 31 32 37 38 41 58
STRING_LITERAL (259) 42 48
INTEGER (260) 35 39 59
FLOAT_VAL (261) 40
PRINT (262) 48 49
SCANF (263)
MAIN (264) 1
FOR (265) 53
WHILE (266) 36 52
IF (267) 50 51
ELIF (268)
ELSE (269) 51
BREAK (270) 16 35
CONTINUE (271) 17
RETURN (272) 66 67
CLASS (273)
INCLUDE (274)
FUNCTION (275)
TRY (276)
CATCH (277)
SUCCESS (278)
ARRAY (279)
INT (280) 20
FLOAT (281) 21
CHAR (282) 22
STRING (283) 23
STRUCT (284) 25
ENUM (285) 28
ASSIGN (286) 37
AND (287)
OR (288)
NOT (289)
VOID (290) 24
SWITCH (291) 32
CASE (292) 35
DO (293) 36


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
statements (56)
    on left: 2 3, on right: 1 3 31 35 36 50 51 52 53
statement (57)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
declaration (58)
    on left: 19, on right: 4 26 27 54
type (59)
    on left: 20 21 22 23 24, on right: 19 31
struct_declaration (60)
    on left: 25, on right: 5
struct_members (61)
    on left: 26 27, on right: 25 27
enum_declaration (62)
    on left: 28, on right: 6
enum_list (63)
    on left: 29 30, on right: 28 30
function_declaration (64)
    on left: 31, on right: 7
switch_statement (65)
    on left: 32, on right: 8
case_list (66)
    on left: 33 34, on right: 32 34
case_statement (67)
    on left: 35, on right: 33 34
do_while_statement (68)
    on left: 36, on right: 9
assignment (69)
    on left: 37 38, on right: 10 55 56
expression (70)
    on left: 39 40 41 42 43 44 45 46 47, on right: 37 38 43 44 45 46
    47 49 54 57 67
print_statement (71)
    on left: 48 49, on right: 11
if_statement (72)
    on left: 50 51, on right: 12
while_statement (73)
    on left: 52, on right: 13
for_statement (74)
    on left: 53, on right: 14
for_init (75)
    on left: 54 55, on right: 53
for_update (76)
    on left: 56, on right: 53
condition (77)
    on left: 57 58 59, on right: 36 50 51 52 53
comparison_op (78)
    on left: 60 61 62 63 64 65, on right: 57
return_statement (79)
    on left: 66 67, on right: 15


state 0

    0 $accept: . program $end

    MAIN  shift, and go to state 1

    program  go to state 2


state 1

    1 program: MAIN . '{' statements '}'

    '{'  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: MAIN '{' . statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 22
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 4

    0 $accept: program $end .

    $default  accept


state 5

   37 assignment: IDENTIFIER . ASSIGN expression
   38           | IDENTIFIER . '=' expression

    ASSIGN  shift, and go to state 37
    '='     shift, and go to state 38


state 6

   48 print_statement: PRINT . '(' STRING_LITERAL ')'
   49                | PRINT . '(' expression ')'

    '('  shift, and go to state 39


state 7

   53 for_statement: FOR . '(' for_init condition ';' for_update ')' '{' statements '}'

    '('  shift, and go to state 40


state 8

   52 while_statement: WHILE . '(' condition ')' '{' statements '}'

    '('  shift, and go to state 41


state 9

   50 if_statement: IF . '(' condition ')' '{' statements '}'
   51             | IF . '(' condition ')' '{' statements '}' ELSE '{' statements '}'

    '('  shift, and go to state 42


state 10

   16 statement: BREAK . ';'

    ';'  shift, and go to state 43


state 11

   17 statement: CONTINUE . ';'

    ';'  shift, and go to state 44


state 12

   66 return_statement: RETURN .
   67                 | RETURN . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    $default  reduce using rule 66 (return_statement)

    expression  go to state 50


state 13

   20 type: INT .

    $default  reduce using rule 20 (type)


state 14

   21 type: FLOAT .

    $default  reduce using rule 21 (type)


state 15

   22 type: CHAR .

    $default  reduce using rule 22 (type)


state 16

   23 type: STRING .

    $default  reduce using rule 23 (type)


state 17

   25 struct_declaration: STRUCT . IDENTIFIER '{' struct_members '}' ';'

    IDENTIFIER  shift, and go to state 51


state 18

   28 enum_declaration: ENUM . IDENTIFIER '{' enum_list '}' ';'

    IDENTIFIER  shift, and go to state 52


state 19

   24 type: VOID .

    $default  reduce using rule 24 (type)


state 20

   32 switch_statement: SWITCH . '(' IDENTIFIER ')' '{' case_list '}'

    '('  shift, and go to state 53


state 21

   36 do_while_statement: DO . '{' statements '}' WHILE '(' condition ')' ';'

    '{'  shift, and go to state 54


state 22

    1 program: MAIN '{' statements . '}'
    3 statements: statements . statement

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 55

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 23

    2 statements: statement .

    $default  reduce using rule 2 (statements)


state 24

    4 statement: declaration . ';'

    ';'  shift, and go to state 57


state 25

   19 declaration: type . IDENTIFIER
   31 function_declaration: type . IDENTIFIER '(' ')' '{' statements '}'

    IDENTIFIER  shift, and go to state 58


state 26

    5 statement: struct_declaration .

    $default  reduce using rule 5 (statement)


state 27

    6 statement: enum_declaration .

    $default  reduce using rule 6 (statement)


state 28

    7 statement: function_declaration .

    $default  reduce using rule 7 (statement)


state 29

    8 statement: switch_statement .

    $default  reduce using rule 8 (statement)


state 30

    9 statement: do_while_statement .

    $default  reduce using rule 9 (statement)


state 31

   10 statement: assignment . ';'

    ';'  shift, and go to state 59


state 32

   11 statement: print_statement . ';'

    ';'  shift, and go to state 60


state 33

   12 statement: if_statement .

    $default  reduce using rule 12 (statement)


state 34

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 35

   14 statement: for_statement .

    $default  reduce using rule 14 (statement)


state 36

   15 statement: return_statement . ';'

    ';'  shift, and go to state 61


state 37

   37 assignment: IDENTIFIER ASSIGN . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 62


state 38

   38 assignment: IDENTIFIER '=' . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 63


state 39

   48 print_statement: PRINT '(' . STRING_LITERAL ')'
   49                | PRINT '(' . expression ')'

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 64
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 65


state 40

   53 for_statement: FOR '(' . for_init condition ';' for_update ')' '{' statements '}'

    IDENTIFIER  shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    VOID        shift, and go to state 19

    declaration  go to state 66
    type         go to state 67
    assignment   go to state 68
    for_init     go to state 69


state 41

   52 while_statement: WHILE '(' . condition ')' '{' statements '}'

    IDENTIFIER      shift, and go to state 70
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 71
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 72
    condition   go to state 73


state 42

   50 if_statement: IF '(' . condition ')' '{' statements '}'
   51             | IF '(' . condition ')' '{' statements '}' ELSE '{' statements '}'

    IDENTIFIER      shift, and go to state 70
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 71
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 72
    condition   go to state 74


state 43

   16 statement: BREAK ';' .

    $default  reduce using rule 16 (statement)


state 44

   17 statement: CONTINUE ';' .

    $default  reduce using rule 17 (statement)


state 45

   41 expression: IDENTIFIER .

    $default  reduce using rule 41 (expression)


state 46

   42 expression: STRING_LITERAL .

    $default  reduce using rule 42 (expression)


state 47

   39 expression: INTEGER .

    $default  reduce using rule 39 (expression)


state 48

   40 expression: FLOAT_VAL .

    $default  reduce using rule 40 (expression)


state 49

   47 expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 75


state 50

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   67 return_statement: RETURN expression .

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 67 (return_statement)


state 51

   25 struct_declaration: STRUCT IDENTIFIER . '{' struct_members '}' ';'

    '{'  shift, and go to state 80


state 52

   28 enum_declaration: ENUM IDENTIFIER . '{' enum_list '}' ';'

    '{'  shift, and go to state 81


state 53

   32 switch_statement: SWITCH '(' . IDENTIFIER ')' '{' case_list '}'

    IDENTIFIER  shift, and go to state 82


state 54

   36 do_while_statement: DO '{' . statements '}' WHILE '(' condition ')' ';'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 83
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 55

    1 program: MAIN '{' statements '}' .

    $default  reduce using rule 1 (program)


state 56

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


state 57

    4 statement: declaration ';' .

    $default  reduce using rule 4 (statement)


state 58

   19 declaration: type IDENTIFIER .
   31 function_declaration: type IDENTIFIER . '(' ')' '{' statements '}'

    '('  shift, and go to state 84

    $default  reduce using rule 19 (declaration)


state 59

   10 statement: assignment ';' .

    $default  reduce using rule 10 (statement)


state 60

   11 statement: print_statement ';' .

    $default  reduce using rule 11 (statement)


state 61

   15 statement: return_statement ';' .

    $default  reduce using rule 15 (statement)


state 62

   37 assignment: IDENTIFIER ASSIGN expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 37 (assignment)


state 63

   38 assignment: IDENTIFIER '=' expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 38 (assignment)


state 64

   42 expression: STRING_LITERAL .
   48 print_statement: PRINT '(' STRING_LITERAL . ')'

    ')'  shift, and go to state 85

    ')'       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 65

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   49 print_statement: PRINT '(' expression . ')'

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    ')'  shift, and go to state 86


state 66

   54 for_init: declaration . '=' expression ';'

    '='  shift, and go to state 87


state 67

   19 declaration: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 88


state 68

   55 for_init: assignment . ';'

    ';'  shift, and go to state 89


state 69

   53 for_statement: FOR '(' for_init . condition ';' for_update ')' '{' statements '}'

    IDENTIFIER      shift, and go to state 70
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 71
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 72
    condition   go to state 90


state 70

   41 expression: IDENTIFIER .
   58 condition: IDENTIFIER .

    ';'       reduce using rule 58 (condition)
    ')'       reduce using rule 58 (condition)
    $default  reduce using rule 41 (expression)


state 71

   39 expression: INTEGER .
   59 condition: INTEGER .

    ';'       reduce using rule 59 (condition)
    ')'       reduce using rule 59 (condition)
    $default  reduce using rule 39 (expression)


state 72

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   57 condition: expression . comparison_op expression

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '='  shift, and go to state 91
    '<'  shift, and go to state 92
    '>'  shift, and go to state 93
    '!'  shift, and go to state 94

    comparison_op  go to state 95


state 73

   52 while_statement: WHILE '(' condition . ')' '{' statements '}'

    ')'  shift, and go to state 96


state 74

   50 if_statement: IF '(' condition . ')' '{' statements '}'
   51             | IF '(' condition . ')' '{' statements '}' ELSE '{' statements '}'

    ')'  shift, and go to state 97


state 75

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | '(' expression . ')'

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    ')'  shift, and go to state 98


state 76

   43 expression: expression '+' . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 99


state 77

   44 expression: expression '-' . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 100


state 78

   45 expression: expression '*' . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 101


state 79

   46 expression: expression '/' . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 102


state 80

   25 struct_declaration: STRUCT IDENTIFIER '{' . struct_members '}' ';'

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 19

    declaration     go to state 103
    type            go to state 67
    struct_members  go to state 104


state 81

   28 enum_declaration: ENUM IDENTIFIER '{' . enum_list '}' ';'

    IDENTIFIER  shift, and go to state 105

    enum_list  go to state 106


state 82

   32 switch_statement: SWITCH '(' IDENTIFIER . ')' '{' case_list '}'

    ')'  shift, and go to state 107


state 83

    3 statements: statements . statement
   36 do_while_statement: DO '{' statements . '}' WHILE '(' condition ')' ';'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 108

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 84

   31 function_declaration: type IDENTIFIER '(' . ')' '{' statements '}'

    ')'  shift, and go to state 109


state 85

   48 print_statement: PRINT '(' STRING_LITERAL ')' .

    $default  reduce using rule 48 (print_statement)


state 86

   49 print_statement: PRINT '(' expression ')' .

    $default  reduce using rule 49 (print_statement)


state 87

   54 for_init: declaration '=' . expression ';'

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 110


state 88

   19 declaration: type IDENTIFIER .

    $default  reduce using rule 19 (declaration)


state 89

   55 for_init: assignment ';' .

    $default  reduce using rule 55 (for_init)


state 90

   53 for_statement: FOR '(' for_init condition . ';' for_update ')' '{' statements '}'

    ';'  shift, and go to state 111


state 91

   62 comparison_op: '=' . '='

    '='  shift, and go to state 112


state 92

   61 comparison_op: '<' .
   65              | '<' . '='

    '='  shift, and go to state 113

    $default  reduce using rule 61 (comparison_op)


state 93

   60 comparison_op: '>' .
   64              | '>' . '='

    '='  shift, and go to state 114

    $default  reduce using rule 60 (comparison_op)


state 94

   63 comparison_op: '!' . '='

    '='  shift, and go to state 115


state 95

   57 condition: expression comparison_op . expression

    IDENTIFIER      shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 47
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 116


state 96

   52 while_statement: WHILE '(' condition ')' . '{' statements '}'

    '{'  shift, and go to state 117


state 97

   50 if_statement: IF '(' condition ')' . '{' statements '}'
   51             | IF '(' condition ')' . '{' statements '}' ELSE '{' statements '}'

    '{'  shift, and go to state 118


state 98

   47 expression: '(' expression ')' .

    $default  reduce using rule 47 (expression)


state 99

   43 expression: expression . '+' expression
   43           | expression '+' expression .
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 43 (expression)


state 100

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   44           | expression '-' expression .
   45           | expression . '*' expression
   46           | expression . '/' expression

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 44 (expression)


state 101

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   45           | expression '*' expression .
   46           | expression . '/' expression

    $default  reduce using rule 45 (expression)


state 102

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   46           | expression '/' expression .

    $default  reduce using rule 46 (expression)


state 103

   26 struct_members: declaration . ';'

    ';'  shift, and go to state 119


state 104

   25 struct_declaration: STRUCT IDENTIFIER '{' struct_members . '}' ';'
   27 struct_members: struct_members . declaration ';'

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 19
    '}'     shift, and go to state 120

    declaration  go to state 121
    type         go to state 67


state 105

   29 enum_list: IDENTIFIER .

    $default  reduce using rule 29 (enum_list)


state 106

   28 enum_declaration: ENUM IDENTIFIER '{' enum_list . '}' ';'
   30 enum_list: enum_list . ',' IDENTIFIER

    '}'  shift, and go to state 122
    ','  shift, and go to state 123


state 107

   32 switch_statement: SWITCH '(' IDENTIFIER ')' . '{' case_list '}'

    '{'  shift, and go to state 124


state 108

   36 do_while_statement: DO '{' statements '}' . WHILE '(' condition ')' ';'

    WHILE  shift, and go to state 125


state 109

   31 function_declaration: type IDENTIFIER '(' ')' . '{' statements '}'

    '{'  shift, and go to state 126


state 110

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   54 for_init: declaration '=' expression . ';'

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    ';'  shift, and go to state 127


state 111

   53 for_statement: FOR '(' for_init condition ';' . for_update ')' '{' statements '}'

    IDENTIFIER  shift, and go to state 5

    assignment  go to state 128
    for_update  go to state 129


state 112

   62 comparison_op: '=' '=' .

    $default  reduce using rule 62 (comparison_op)


state 113

   65 comparison_op: '<' '=' .

    $default  reduce using rule 65 (comparison_op)


state 114

   64 comparison_op: '>' '=' .

    $default  reduce using rule 64 (comparison_op)


state 115

   63 comparison_op: '!' '=' .

    $default  reduce using rule 63 (comparison_op)


state 116

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   57 condition: expression comparison_op expression .

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 57 (condition)


state 117

   52 while_statement: WHILE '(' condition ')' '{' . statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 130
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 118

   50 if_statement: IF '(' condition ')' '{' . statements '}'
   51             | IF '(' condition ')' '{' . statements '}' ELSE '{' statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 131
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 119

   26 struct_members: declaration ';' .

    $default  reduce using rule 26 (struct_members)


state 120

   25 struct_declaration: STRUCT IDENTIFIER '{' struct_members '}' . ';'

    ';'  shift, and go to state 132


state 121

   27 struct_members: struct_members declaration . ';'

    ';'  shift, and go to state 133


state 122

   28 enum_declaration: ENUM IDENTIFIER '{' enum_list '}' . ';'

    ';'  shift, and go to state 134


state 123

   30 enum_list: enum_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 135


state 124

   32 switch_statement: SWITCH '(' IDENTIFIER ')' '{' . case_list '}'

    CASE  shift, and go to state 136

    case_list       go to state 137
    case_statement  go to state 138


state 125

   36 do_while_statement: DO '{' statements '}' WHILE . '(' condition ')' ';'

    '('  shift, and go to state 139


state 126

   31 function_declaration: type IDENTIFIER '(' ')' '{' . statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 140
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 127

   54 for_init: declaration '=' expression ';' .

    $default  reduce using rule 54 (for_init)


state 128

   56 for_update: assignment .

    $default  reduce using rule 56 (for_update)


state 129

   53 for_statement: FOR '(' for_init condition ';' for_update . ')' '{' statements '}'

    ')'  shift, and go to state 141


state 130

    3 statements: statements . statement
   52 while_statement: WHILE '(' condition ')' '{' statements . '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 142

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 131

    3 statements: statements . statement
   50 if_statement: IF '(' condition ')' '{' statements . '}'
   51             | IF '(' condition ')' '{' statements . '}' ELSE '{' statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 143

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 132

   25 struct_declaration: STRUCT IDENTIFIER '{' struct_members '}' ';' .

    $default  reduce using rule 25 (struct_declaration)


state 133

   27 struct_members: struct_members declaration ';' .

    $default  reduce using rule 27 (struct_members)


state 134

   28 enum_declaration: ENUM IDENTIFIER '{' enum_list '}' ';' .

    $default  reduce using rule 28 (enum_declaration)


state 135

   30 enum_list: enum_list ',' IDENTIFIER .

    $default  reduce using rule 30 (enum_list)


state 136

   35 case_statement: CASE . INTEGER ':' statements BREAK ';'

    INTEGER  shift, and go to state 144


state 137

   32 switch_statement: SWITCH '(' IDENTIFIER ')' '{' case_list . '}'
   34 case_list: case_list . case_statement

    CASE  shift, and go to state 136
    '}'   shift, and go to state 145

    case_statement  go to state 146


state 138

   33 case_list: case_statement .

    $default  reduce using rule 33 (case_list)


state 139

   36 do_while_statement: DO '{' statements '}' WHILE '(' . condition ')' ';'

    IDENTIFIER      shift, and go to state 70
    STRING_LITERAL  shift, and go to state 46
    INTEGER         shift, and go to state 71
    FLOAT_VAL       shift, and go to state 48
    '('             shift, and go to state 49

    expression  go to state 72
    condition   go to state 147


state 140

    3 statements: statements . statement
   31 function_declaration: type IDENTIFIER '(' ')' '{' statements . '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 148

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 141

   53 for_statement: FOR '(' for_init condition ';' for_update ')' . '{' statements '}'

    '{'  shift, and go to state 149


state 142

   52 while_statement: WHILE '(' condition ')' '{' statements '}' .

    $default  reduce using rule 52 (while_statement)


state 143

   50 if_statement: IF '(' condition ')' '{' statements '}' .
   51             | IF '(' condition ')' '{' statements '}' . ELSE '{' statements '}'

    ELSE  shift, and go to state 150

    $default  reduce using rule 50 (if_statement)


state 144

   35 case_statement: CASE INTEGER . ':' statements BREAK ';'

    ':'  shift, and go to state 151


state 145

   32 switch_statement: SWITCH '(' IDENTIFIER ')' '{' case_list '}' .

    $default  reduce using rule 32 (switch_statement)


state 146

   34 case_list: case_list case_statement .

    $default  reduce using rule 34 (case_list)


state 147

   36 do_while_statement: DO '{' statements '}' WHILE '(' condition . ')' ';'

    ')'  shift, and go to state 152


state 148

   31 function_declaration: type IDENTIFIER '(' ')' '{' statements '}' .

    $default  reduce using rule 31 (function_declaration)


state 149

   53 for_statement: FOR '(' for_init condition ';' for_update ')' '{' . statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 153
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 150

   51 if_statement: IF '(' condition ')' '{' statements '}' ELSE . '{' statements '}'

    '{'  shift, and go to state 154


state 151

   35 case_statement: CASE INTEGER ':' . statements BREAK ';'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]

    statements            go to state 155
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 152

   36 do_while_statement: DO '{' statements '}' WHILE '(' condition ')' . ';'

    ';'  shift, and go to state 156


state 153

    3 statements: statements . statement
   53 for_statement: FOR '(' for_init condition ';' for_update ')' '{' statements . '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 157

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 154

   51 if_statement: IF '(' condition ')' '{' statements '}' ELSE '{' . statements '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    $default    reduce using rule 18 (statement)

    statements            go to state 158
    statement             go to state 23
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 155

    3 statements: statements . statement
   35 case_statement: CASE INTEGER ':' statements . BREAK ';'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 156

   36 do_while_statement: DO '{' statements '}' WHILE '(' condition ')' ';' .

    $default  reduce using rule 36 (do_while_statement)


state 157

   53 for_statement: FOR '(' for_init condition ';' for_update ')' '{' statements '}' .

    $default  reduce using rule 53 (for_statement)


state 158

    3 statements: statements . statement
   51 if_statement: IF '(' condition ')' '{' statements '}' ELSE '{' statements . '}'

    IDENTIFIER  shift, and go to state 5
    PRINT       shift, and go to state 6
    FOR         shift, and go to state 7
    WHILE       shift, and go to state 8
    IF          shift, and go to state 9
    BREAK       shift, and go to state 10
    CONTINUE    shift, and go to state 11
    RETURN      shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    STRUCT      shift, and go to state 17
    ENUM        shift, and go to state 18
    VOID        shift, and go to state 19
    SWITCH      shift, and go to state 20
    DO          shift, and go to state 21
    '}'         shift, and go to state 160

    IDENTIFIER  [reduce using rule 18 (statement)]
    PRINT       [reduce using rule 18 (statement)]
    FOR         [reduce using rule 18 (statement)]
    WHILE       [reduce using rule 18 (statement)]
    IF          [reduce using rule 18 (statement)]
    BREAK       [reduce using rule 18 (statement)]
    CONTINUE    [reduce using rule 18 (statement)]
    RETURN      [reduce using rule 18 (statement)]
    INT         [reduce using rule 18 (statement)]
    FLOAT       [reduce using rule 18 (statement)]
    CHAR        [reduce using rule 18 (statement)]
    STRING      [reduce using rule 18 (statement)]
    STRUCT      [reduce using rule 18 (statement)]
    ENUM        [reduce using rule 18 (statement)]
    VOID        [reduce using rule 18 (statement)]
    SWITCH      [reduce using rule 18 (statement)]
    DO          [reduce using rule 18 (statement)]
    '}'         [reduce using rule 18 (statement)]

    statement             go to state 56
    declaration           go to state 24
    type                  go to state 25
    struct_declaration    go to state 26
    enum_declaration      go to state 27
    function_declaration  go to state 28
    switch_statement      go to state 29
    do_while_statement    go to state 30
    assignment            go to state 31
    print_statement       go to state 32
    if_statement          go to state 33
    while_statement       go to state 34
    for_statement         go to state 35
    return_statement      go to state 36


state 159

   16 statement: BREAK . ';'
   35 case_statement: CASE INTEGER ':' statements BREAK . ';'

    ';'  shift, and go to state 161


state 160

   51 if_statement: IF '(' condition ')' '{' statements '}' ELSE '{' statements '}' .

    $default  reduce using rule 51 (if_statement)


state 161

   16 statement: BREAK ';' .
   35 case_statement: CASE INTEGER ':' statements BREAK ';' .

    CASE      reduce using rule 35 (case_statement)
    '}'       reduce using rule 35 (case_statement)
    $default  reduce using rule 16 (statement)
